{
    "docs": [
        {
            "location": "/",
            "text": "What is ProBuilder?\n\n\nVideo Overview\n \n\n\nProBuilder\n is an editor extension that enables you to seamlessly build, edit, and texture custom geometry, directly in the Unity editor, with an extremely fluid and intuitive workflow. It's a mixture of old-school \"BSP-style construction\", and full-featured 3D modeling and UV Unwrapping toolsets.\n\n\nProBuilder Advanced vs. ProBuilder Basic\n\n\nProBuilder Basic\n is the core of ProBuilder, streamlined to the necessities for speed and simplicity.  Using Basic, you can quickly build great looking early-stage structures, props, walls, bunkers, vehicles, virtually anything at all. Test and tweak instantly, then replace with final models once your artists catch up- if they can!  ProBuilder Basic includes the ability to quickly colorize faces without adding a single draw call, so you can designate team areas, or just get creative with colorful dev textures.\n\n\n\n\nImportant!\n\nThis documentation encompasses \nall\n features, actions, and tools available in ProBuilder Advanced.  ProBuilder Basic features a subset of these.  If you are using ProBuilder Basic, please view the full \nAdvanced vs Basic Comparision\n.  ProBuilder Advanced tools will be shown with a blue tint in the menu.\n\n\n\n\nAccess source files, beta builds, and online download links\n\n\nOnce you have registered (by forwarding your purchase invoice to \ncontact@procore3d.com\n) you can:\n\n\n\n\nCreate an account at the \nProCore3D User Toolbox\n website for online access to your files, including ProBuilder source files.\n\n\nJoin the Beta Testing Group, to help us test early builds of ProBuilder!\n\n\n\n\nThanks for purchasing ProBuilder, your support allows us to keep updating and developing all the ProCore tools!\n\n\nHelpful Links and Info\n\n\n\n\nProCore3D Website\n\n\nEmail\n  \n\n\nFacebook\n  \n\n\nTwitter\n \n\n\nOnline Documentation\n\n\nTutorial Videos\n\n\nSupport and Troubleshooting\n\n\n\n\nNewsletter\n:\n Subscribe to receive info on ProCore tools via email.\n\n\nVideo Tutorials\n:\n Take a short break to watch the video tutorials before using ProBuilder.  You\u2019ll be an expert in no time!",
            "title": "Home"
        },
        {
            "location": "/#what-is-probuilder",
            "text": "Video Overview    ProBuilder  is an editor extension that enables you to seamlessly build, edit, and texture custom geometry, directly in the Unity editor, with an extremely fluid and intuitive workflow. It's a mixture of old-school \"BSP-style construction\", and full-featured 3D modeling and UV Unwrapping toolsets.",
            "title": "What is ProBuilder?"
        },
        {
            "location": "/#probuilder-advanced-vs-probuilder-basic",
            "text": "ProBuilder Basic  is the core of ProBuilder, streamlined to the necessities for speed and simplicity.  Using Basic, you can quickly build great looking early-stage structures, props, walls, bunkers, vehicles, virtually anything at all. Test and tweak instantly, then replace with final models once your artists catch up- if they can!  ProBuilder Basic includes the ability to quickly colorize faces without adding a single draw call, so you can designate team areas, or just get creative with colorful dev textures.",
            "title": "ProBuilder Advanced vs. ProBuilder Basic"
        },
        {
            "location": "/#access-source-files-beta-builds-and-online-download-links",
            "text": "Once you have registered (by forwarding your purchase invoice to  contact@procore3d.com ) you can:   Create an account at the  ProCore3D User Toolbox  website for online access to your files, including ProBuilder source files.  Join the Beta Testing Group, to help us test early builds of ProBuilder!   Thanks for purchasing ProBuilder, your support allows us to keep updating and developing all the ProCore tools!",
            "title": "Access source files, beta builds, and online download links"
        },
        {
            "location": "/#helpful-links-and-info",
            "text": "ProCore3D Website  Email     Facebook     Twitter    Online Documentation  Tutorial Videos  Support and Troubleshooting   Newsletter :  Subscribe to receive info on ProCore tools via email.  Video Tutorials :  Take a short break to watch the video tutorials before using ProBuilder.  You\u2019ll be an expert in no time!",
            "title": "Helpful Links and Info"
        },
        {
            "location": "/upgrading/",
            "text": "Important!\n\nThe upgrade process is \nnot\n reversible. If an error occurs, you will lose all your work. Always make a backup of your entire project before upgrading.\n\n\n\n\nIf you are using \nProBuilder 2.4.7\n or later (you can check in the \nTools \n ProBuilder \n About\n window) you can skip this entirely and just import the new version.\n\n\nIf you're running an older version of \nProBuilder\n you'll need to follow a slightly more complex path.  \nMake a backup of your entire project before proceeding!\n\n\nDepending on the version of ProBuilder you currently have installed, the process differs.  Use this chart to decide which guide you should follow.\n\n\n\n\n\n\n\n\nCurrently Using\n\n\nUpgrading To\n\n\nProcess\n\n\n\n\n\n\n\n\n\n\nNone (no ProBuilder install)\n\n\nProBuilder Basic\n\n\nStandard\n\n\n\n\n\n\nNone (no ProBuilder install)\n\n\nProBuilder Advanced\n\n\nStandard\n\n\n\n\n\n\nProBuilder Basic 2.4.8+\n\n\nProBuilder Basic 2.4.8+\n\n\nStandard\n\n\n\n\n\n\nProBuilder Advanced 2.4.8+\n\n\nProBuilder Advanced 2.4.8+\n\n\nStandard\n\n\n\n\n\n\nProBuilder 2.1.0 - 2.3.x\n\n\nProBuilder Advanced\n\n\nUpgrade Kit\n\n\n\n\n\n\nProBuilder 2.4.0 - 2.4.7\n\n\nProBuilder Advanced\n\n\nDLL Rename Upgrade\n\n\n\n\n\n\nPrototype 2.4 - 2.6\n\n\nProBuilder Basic/Advanced\n\n\nPrototype Upgrade\n\n\n\n\n\n\nProBuilder Source (any version)\n\n\nProBuilder (any version)\n\n\nUpgrade Kit\n\n\n\n\n\n\nProBuilder (any version)\n\n\nProBuilder Source (any version)\n\n\nUpgrade Kit\n\n\n\n\n\n\n\n\n\n\nStandard\n\n\nIf you're upgrading from version 2.4.7 or higher (either ProBuilder Basic or ProBuilder Advanced), updating a ProBuilder project is as simple as importing the new package.  \n\n\nThere are some circumstances where this will fail however, so always be sure to make a backup prior to upgrading your project.  In the event that simply importing the new package fails, follow this the \nDLL Rename Upgrade\n guide.\n\n\n\n\nPrototype\n\n\nIf you're using \nPrototype\n (the precursor to **ProBuilder Basic) you'll need to perform one additional step prior to using the \nDLL Rename\n guide.\n\n\n\n\nRename \nProCore/Prototype\n folder to \nProCore/ProBuilder\n\n\nFollow \nDLL Rename Upgrade\n\n\n\n\n\n\nDLL Rename\n\n\n\n\nImportant!\n\nAs of Unity 5.3 this guide no longer applies.  Use the \nStandard\n upgrade procedure.\n\n\n\n\nVideo tutorial\n\n\n\n\nImport the new ProBuilder unity package.  Make sure all items are toggled in the Importing Package window.\n\n\nAfter import, close the ProBuilder About Window with this version's changelog.\n\n\nThere are now errors in the Console.  This is expected.\n\n\nNavigate to the \nProCore \n ProBuilder \n Classes\n folder.\n\n\nRight-Click (Context-Click Mac) the \nProBuilderCore-Unity5\n file and select \nShow In Explorer\n.\n\n\nIn the File Explorer (or Finder, on Mac), delete the \nProBuilderCore-Unity5\n and \nProBuilderMeshOps-Unity5\n\n\nNext (still in the File Explorer) rename \nProBuilderCore-Unity6\n and \nProBuilderMeshOps-Unity6\n to \nProBuilderCore-Unity5\n and \nProBuilderMeshOps-Unity5\n.  If visible meta files are enabled, don't worry about changing their file names.  Unity will take care of that for you.\n\n\nStaying in the File Explorer, navigate one folder up and into the \nEditor\n folder.\n\n\nFollow the same procedure with the \nProBuilderEditor-Unity5\n files.  Delete \nProBuilderEditor-Unity5\n then rename \nProBuilderEditor-Unity6\n to \nProBuilderEditor-Unity5\n.\n\n\nOpen Unity again.  The project will recompile.\n\n\nDepending on what version of ProBuilder you are upgrading from, you may see some errors in the Console from deprecated scripts.  Just click the error to find the file, then delete it (making sure that it is in the ProBuilder folder, don't delete any of your own scripts!).\n\n\nCommon deprecated files to delete:\n\n\nProBuilder \n Editor \n MenuItems \n File \n pb_SaveLoad\n\n\nProBuilder \n Editor \n MenuItems \n Tools \n pb_VertexPainter\n\n\nProBuilder \n Editor \n MenuItems \n Tools \n pb_MaterialSelectionTool\n\n\nProCore \n Shared\n (entire folder is deprecated)\n\n\n\n\n\n\n\n\n\n\nDone!\n\n\n\n\n\n\nUpgrade Kit\n\n\nFollow these steps if you are upgrading a ProBuilder project from a version less than 2.4 (Tools / ProBuilder / About to check your current version).  If you are switching from the Source version of ProBuilder to the DLL version this guide also applies.\n\n\nYoutube Tutorial\n\n\nUpgrade Kit Download\n\n\n\n\nBack up your project\n\n\nImport the ProBuilderUpgradeKit package before importing the new version of ProBuilder (downloadable in the User Toolbox, or bundled in the ProBuilder package).\n\n\nRun \nTools \n ProBuilder \n Upgrade \n Batch Prepare Scenes for Upgrade\n.\n\n\nDelete the ProBuilder folder, and optionally the ProCore \n Shared folder (if you delete this, make sure to also update ProGrids).\n\n\nImport the new ProBuilder package.\n\n\nRun \nTools \n ProBuilder \n Upgrade \n Batch Re-attach ProBuilder Scripts\n.\n\n\nDelete ProBuilderUpgradeKit folder.",
            "title": "What Upgrade Procedure Should I Follow?"
        },
        {
            "location": "/upgrading/#standard",
            "text": "If you're upgrading from version 2.4.7 or higher (either ProBuilder Basic or ProBuilder Advanced), updating a ProBuilder project is as simple as importing the new package.    There are some circumstances where this will fail however, so always be sure to make a backup prior to upgrading your project.  In the event that simply importing the new package fails, follow this the  DLL Rename Upgrade  guide.",
            "title": "Standard"
        },
        {
            "location": "/upgrading/#prototype",
            "text": "If you're using  Prototype  (the precursor to **ProBuilder Basic) you'll need to perform one additional step prior to using the  DLL Rename  guide.   Rename  ProCore/Prototype  folder to  ProCore/ProBuilder  Follow  DLL Rename Upgrade",
            "title": "Prototype"
        },
        {
            "location": "/upgrading/#dll-rename",
            "text": "",
            "title": "DLL Rename"
        },
        {
            "location": "/upgrading/#upgrade-kit",
            "text": "Follow these steps if you are upgrading a ProBuilder project from a version less than 2.4 (Tools / ProBuilder / About to check your current version).  If you are switching from the Source version of ProBuilder to the DLL version this guide also applies.  Youtube Tutorial  Upgrade Kit Download   Back up your project  Import the ProBuilderUpgradeKit package before importing the new version of ProBuilder (downloadable in the User Toolbox, or bundled in the ProBuilder package).  Run  Tools   ProBuilder   Upgrade   Batch Prepare Scenes for Upgrade .  Delete the ProBuilder folder, and optionally the ProCore   Shared folder (if you delete this, make sure to also update ProGrids).  Import the new ProBuilder package.  Run  Tools   ProBuilder   Upgrade   Batch Re-attach ProBuilder Scripts .  Delete ProBuilderUpgradeKit folder.",
            "title": "Upgrade Kit"
        },
        {
            "location": "/troubleshooting/",
            "text": "Error building Player: UnityException: Failed to run serialization weaver with command\n\n\nTo get things compiling again, you just need to mark the ProBuilder DLLs as Editor only.\n\n\n\n\nThis does mean you won't be able to access any of the ProBuilder API at runtime.  Fortunately if you're just using ProBuilder to build levels you don't need to worry about that.\n\n\n\n\nSteps to Fix\n\n\n\n\n\n\n\nFirst make sure that \nStrip PB Scripts on Build\n is checked in the Preferences/ProBuilder panel.\n\n\n\n\n\n\n\n\nNext, locate \nProBuilderCore-Unity5.dll\n and \nProBuilderMeshOps-Unity5.dll\n in your project.\n\n\n\n\n\n\n\n\nWith both \nProBuilderCore-Unity5\n and \nProBuilderMeshOps-Unity5\n selected, in the Inspector window uncheck \"Any Platform.\"  Then toggle both \"Editor\" and \"Standalone.\"\n\n\n\n\n\n\n\n\nIf you're using ProBuilder 2.5 or lower, some errors will appear when scripts reload.  Open the following files (in ProBuilder/API Examples):\n\n\n\n\nIcoBumpin.cs\n\n\nHueCube.cs\n\n\nRuntimeEdit.cs\n\n\n\n\nIn each of these files, place this line at the very beginning:\n\n\n#if UNITY_EDITOR || UNITY_STANDALONE\n\n\n\nand this line at the very end:\n\n\n#endif\n\n\n\nFor example, here's what \nRuntimeEdit.cs\n looks like:\n\n\n#if UNITY_STANDALONE || UNITY_EDITOR\nusing UnityEngine;\nusing System.Collections;\nusing ProBuilder2.Common;\n\nnamespace ProBuilder2.Examples\n{\n\n    /**\n     *  \\brief This class allows the user to select a single face at a time and move it forwards or backwards.\n     *  More advanced usage of the ProBuilder API should make use of the pb_Object-\nSelectedFaces list to keep\n     *  track of the selected faces.\n     */\n    public class RuntimeEdit : MonoBehaviour \n    {\n        // ... etc\n    }\n}\n#endif\n\n\n\nNow compile your project and run!",
            "title": "Troubleshooting"
        },
        {
            "location": "/troubleshooting/#error-building-player-unityexception-failed-to-run-serialization-weaver-with-command",
            "text": "To get things compiling again, you just need to mark the ProBuilder DLLs as Editor only.   This does mean you won't be able to access any of the ProBuilder API at runtime.  Fortunately if you're just using ProBuilder to build levels you don't need to worry about that.   Steps to Fix    First make sure that  Strip PB Scripts on Build  is checked in the Preferences/ProBuilder panel.     Next, locate  ProBuilderCore-Unity5.dll  and  ProBuilderMeshOps-Unity5.dll  in your project.     With both  ProBuilderCore-Unity5  and  ProBuilderMeshOps-Unity5  selected, in the Inspector window uncheck \"Any Platform.\"  Then toggle both \"Editor\" and \"Standalone.\"     If you're using ProBuilder 2.5 or lower, some errors will appear when scripts reload.  Open the following files (in ProBuilder/API Examples):   IcoBumpin.cs  HueCube.cs  RuntimeEdit.cs   In each of these files, place this line at the very beginning:  #if UNITY_EDITOR || UNITY_STANDALONE  and this line at the very end:  #endif  For example, here's what  RuntimeEdit.cs  looks like:  #if UNITY_STANDALONE || UNITY_EDITOR\nusing UnityEngine;\nusing System.Collections;\nusing ProBuilder2.Common;\n\nnamespace ProBuilder2.Examples\n{\n\n    /**\n     *  \\brief This class allows the user to select a single face at a time and move it forwards or backwards.\n     *  More advanced usage of the ProBuilder API should make use of the pb_Object- SelectedFaces list to keep\n     *  track of the selected faces.\n     */\n    public class RuntimeEdit : MonoBehaviour \n    {\n        // ... etc\n    }\n}\n#endif  Now compile your project and run!",
            "title": "Error building Player: UnityException: Failed to run serialization weaver with command"
        }
    ]
}